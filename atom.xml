<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ReyesMeng&#39;s Blog</title>
  
  <subtitle>Vaya con Dios.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://callmemengmeng.github.io/"/>
  <updated>2020-04-11T06:09:35.182Z</updated>
  <id>https://callmemengmeng.github.io/</id>
  
  <author>
    <name>ReyesMeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FlowChart流程图</title>
    <link href="https://callmemengmeng.github.io/2020/04/11/"/>
    <id>https://callmemengmeng.github.io/2020/04/11/</id>
    <published>2020-04-11T04:46:32.000Z</published>
    <updated>2020-04-11T06:09:35.182Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="http://xxx/aplayer.min.css"><script src="http://xxx/aplayer.min.js" class="aplayer-secondary-script-marker"></script><script>var meting_api='http://xxx/api.php?server=:server&type=:type&id=:id&r=:r'</script><script class="meting-secondary-script-marker" src="http://xxx/Meing.min.js"></script><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>高中数学第一次接触程序就一直是手绘流程图，后来学C时老师推荐使用<a href="https://www.processon.com/" target="_blank" rel="noopener">ProcessOn</a>绘制，最近写汇编程序又要用到，码字时总要登陆网页先绘制再下载之后还得贴到文字内容的相应位置，尤其在需要绘制多张流程图时略显麻烦(比如<a href="https://callmemengmeng.github.io/2020/04/07/">这种</a>工作量)，所以考虑使用Markdown直接绘(<strong>手</strong>)制(<strong>写</strong>)。</p><p>本着搬轮子的指导思想，本小子放狗搜了一圈后发现Markdown支持绘制流程图的插件还真不少，结合Hexo框架的具体实际最终选择基于<a href="http://flowchart.js.org/" target="_blank" rel="noopener"><code>flowchart.js</code></a>的<a href="https://github.com/bubkoo/hexo-filter-flowchart" target="_blank" rel="noopener"><code>hexo-filter-flowchart</code></a>插件。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>轮子的好处就在于省事儿，Hexo的这些插件基本上都可一句话安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-filter-flowchart</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在Hexo的<code>_config.yml</code>文件(注意不是主题的<code>_config.yml</code>)中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flowchart:</span><br><span class="line">  # raphael:   # optional, the source url of raphael.js</span><br><span class="line">  # flowchart: # optional, the source url of flowchart.js</span><br><span class="line">  options: # options used for &#96;drawSVG&#96;</span><br></pre></td></tr></table></figure><p>但和<a href="https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html" target="_blank" rel="noopener">这位老哥</a>发现的问题一样，插件安装成功后未在<code>_config.yml</code>中配置也能直接使用，这一点挺神奇的！</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>由于这个<code>hexo-filter-flowchart</code>插件基于<code>flowchart.js</code>，实际上使用的是后者的语法<code>name=&gt;type: content:&gt;url</code>。其中，</p><ul><li><strong>name</strong>为元素的名称；</li><li><strong>type</strong>为元素所在的流程类型，包括：<ul><li>start，</li><li>end，</li><li>operation，</li><li>subroutine，</li><li>condition，</li><li>input/output，</li><li>parallel；</li></ul></li><li><strong>content</strong>为文本内容(自定义)；</li><li><strong>url</strong>为文本中随附的链接。</li></ul><p>比如插件作者给出的这个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">\&#96;\&#96;\&#96;flow# 使用时删去&#39;\&#39;符号</span><br><span class="line">st&#x3D;&gt;start: Start|past:&gt;</span><br><span class="line">e&#x3D;&gt;end: End:&gt;https:&#x2F;&#x2F;github.com&#x2F;bubkoo&#x2F;hexo-filter-flowchart</span><br><span class="line">op1&#x3D;&gt;operation: My Operation|past</span><br><span class="line">op2&#x3D;&gt;operation: Stuff|current</span><br><span class="line">sub1&#x3D;&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond&#x3D;&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;https:&#x2F;&#x2F;github.com&#x2F;bubkoo&#x2F;hexo-filter-flowchart</span><br><span class="line">c2&#x3D;&gt;condition: Good idea|rejected</span><br><span class="line">io&#x3D;&gt;inputoutput: catch something...|request</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br><span class="line">\&#96;\&#96;\&#96;# 使用时删去&#39;\&#39;符号</span><br></pre></td></tr></table></figure><p>效果如下：</p><div id="flowchart-0" class="flow-chart"></div><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>e=>end: End:>https://github.com/bubkoo/hexo-filter-flowchartop1=>operation: My Operation|pastop2=>operation: Stuff|currentsub1=>subroutine: My Subroutine|invalidcond=>condition: Yesor No?|approved:>https://github.com/bubkoo/hexo-filter-flowchartc2=>condition: Good idea|rejectedio=>inputoutput: catch something...|requestst->op1(right)->condcond(yes, right)->c2cond(no)->sub1(left)->op1c2(yes)->io->ec2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;http://xxx/aplayer.min.css&quot;&gt;&lt;script src=&quot;http://xxx/aplayer.min.js&quot; clas
      
    
    </summary>
    
    
      <category term="Markdown" scheme="https://CallMeMengMeng.github.io/categories/Markdown/"/>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/tags/Blogs/"/>
    
      <category term="Markdown" scheme="https://CallMeMengMeng.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>从一个折腾走向另一个折腾</title>
    <link href="https://callmemengmeng.github.io/2020/04/08/"/>
    <id>https://callmemengmeng.github.io/2020/04/08/</id>
    <published>2020-04-08T12:50:11.000Z</published>
    <updated>2020-04-09T01:59:19.040Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="http://xxx/aplayer.min.css"><script src="http://xxx/aplayer.min.js" class="aplayer-secondary-script-marker"></script><script>var meting_api='http://xxx/api.php?server=:server&type=:type&id=:id&r=:r'</script><script class="meting-secondary-script-marker" src="http://xxx/Meing.min.js"></script><hr><p><center><font face="楷体" size="2" color="gray">“人生就是从一个折腾走向另一个折腾。”——Reyes Meng</font></center></p><p>也不知搭错哪根筋，本小子突发奇想揍性大发就要再倒腾倒腾这小破站。其实颠来倒去就一件事儿，从去年配置好<a href="https://hexo.io/zh-cn/index.html" target="_blank" rel="noopener">HEXO</a>苟到今日，有些文章涉及人员指向性略强得考虑给加加密啊。这才有了傍晚前的一通倒腾。有道是知己知彼方能百战不殆，故出恭时手也没闲着放狗搜相关技术贴子，搭眼一瞧这博文加密有现成轮子可用，节省不少体力！</p><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><p>我的需求很简单只用实现某篇文章输入密码可见即可，HEXO官方插件库中有一款<code>hexo-blog-encrypt</code><a href="https://github.com/MikeCoder/hexo-blog-encrypt" target="_blank" rel="noopener">插件</a>完美契合，且其安装配置和使用都很方便。</p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>鉴于本小子暂时还处在盗版<em>Win10</em>的穷学生时代，并不清楚其他<del>(单纯指Mac)</del>平台的安装方式，故下面所有操作均基于<em>Win + Git Bash + npm</em>环境。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-blog-encrypt --save</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>插件下载成功后需要修改HEXO的<code>_config.yml</code>文件，注意不是所使用主题的<code>_config.yml</code>文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## hexo-blog-encrypt</span><br><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>设置成功后，打开需要加密的文章，在其头部添加如下内容即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The title of your article</span><br><span class="line">tags: Tags of your article</span><br><span class="line">date: Dates of your writing</span><br><span class="line">password: ReyesMeng</span><br><span class="line">abstract: Here&#39;s something encrypted, password is required to continue reading.</span><br><span class="line">message: Hey, password is required here.</span><br><span class="line">wrong_pass_message: Oh, this is an invalid password. Check and try again, please.</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;http://xxx/aplayer.min.css&quot;&gt;&lt;script src=&quot;http://xxx/aplayer.min.js&quot; clas
      
    
    </summary>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/categories/Blogs/"/>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/tags/Blogs/"/>
    
  </entry>
  
  <entry>
    <title>汇编？不会编？会不汇编？</title>
    <link href="https://callmemengmeng.github.io/2020/04/07/"/>
    <id>https://callmemengmeng.github.io/2020/04/07/</id>
    <published>2020-04-07T15:12:31.000Z</published>
    <updated>2020-04-08T01:22:35.502Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="http://xxx/aplayer.min.css"><script src="http://xxx/aplayer.min.js" class="aplayer-secondary-script-marker"></script><script>var meting_api='http://xxx/api.php?server=:server&type=:type&id=:id&r=:r'</script><script class="meting-secondary-script-marker" src="http://xxx/Meing.min.js"></script><blockquote><p>由于某些原因，本小子开始从头学习<a href="http://www.tup.tsinghua.edu.cn/booksCenter/book_03735601.html" target="_blank" rel="noopener">《微机原理与接口技术》</a>这门课，为了尽快熟悉汇编语言，遂连续两星期坚持每天动手写几个小程序练手，获益良多。最近两天遇到两道较有意思的题目，简单整理以记之。</p></blockquote><h2 id="SHR-ADD实现简单乘法"><a href="#SHR-ADD实现简单乘法" class="headerlink" title="SHR+ADD实现简单乘法"></a>SHR+ADD实现简单乘法</h2><p>首先需要明确的是，将一个二进制数左移一位相当于扩大两倍，右移一位相当于缩小为原来的二分之一。这点很好理解：<br>$$0001(B)=01(H)\stackrel{左移1位}\rightarrow0010(B)=02(H)$$ $$1000(B)=08(H)\stackrel{右移1位}\rightarrow0100(B)=04(H)$$<br>题目来源很有意思，有一位来自<a href="https://en.duzce.edu.tr/" target="_blank" rel="noopener">Düzce University</a>的同鞋私信给我这道题寻求帮助，本小子当时内心惶恐(<del>其实我是新手啊</del>)，细看之后发觉我在中科大的一份PPT上看到过类似题目。题目如下：<br><img src="/2020/04/07/question1.jpg" alt="Question1" title="Question1"><br>不多废话，直接上代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CODESEGMENT</span><br><span class="line">ASSUMECS:CODE</span><br><span class="line">START:MOV AL,02H</span><br><span class="line">MOV BL,AL</span><br><span class="line">MOV CL,AL</span><br><span class="line">SHL CL,1    ; 02H*2</span><br><span class="line">SHL BL,3    ; 02H*8</span><br><span class="line">ADD BL,CL   ; 02H*(2+8)</span><br><span class="line">SHL AL,4    ; 02H*16</span><br><span class="line">ADD BL,AL   ; 02H*(2+8+16)&#x3D;02H*26</span><br><span class="line"></span><br><span class="line">MOV AH,4CH</span><br><span class="line">INT 21H</span><br><span class="line">CODEENDS</span><br><span class="line">END START</span><br></pre></td></tr></table></figure><h2 id="利用中断进行输入输出"><a href="#利用中断进行输入输出" class="headerlink" title="利用中断进行输入输出"></a>利用中断进行输入输出</h2><p>我遇到的题目大都是使用21H中断实现输入输出，其大致步骤分为：</p><ul><li>将系统功能号送<code>AH</code>中；</li><li>将入口参数送达指定寄存器；</li><li>使用<code>INT 21H</code>执行功能调用。</li></ul><p>而汇编中常用到的21H系统功能号及其参数如下表<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>：</p><table><thead><tr><th align="center"><code>AH</code></th><th align="center">功能</th><th align="center">入口参数</th><th align="center">出口参数</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">键盘输入一个字符到<code>AL</code>中</td><td align="center">无</td><td align="center"><code>AL</code>(字符)</td></tr><tr><td align="center">2</td><td align="center">输出<code>DL</code>寄存器的字符到显示器</td><td align="center"><code>DL</code>(存放一个字符)</td><td align="center">无</td></tr><tr><td align="center">9</td><td align="center">输出一个以’$’结尾的字符串到显示器</td><td align="center"><code>DS</code>(字符串所在的段地址)、<code>DX</code>(字符串的首地址)</td><td align="center">无</td></tr><tr><td align="center">0AH</td><td align="center">从键盘输入一个字符串到指定的缓冲区</td><td align="center"><code>DS</code>(缓冲区所在的段地址)、<code>DX</code>(缓冲区的首地址)</td><td align="center">缓冲区位置</td></tr><tr><td align="center">4CH</td><td align="center">返回DOS</td><td align="center">无</td><td align="center">无</td></tr></tbody></table><p>更详细的<code>INT 21H</code>功能参数可以参考<a href="https://www.cnblogs.com/ynwlgh/archive/2011/12/12/2285017.html" target="_blank" rel="noopener">此表</a>。</p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写一个子程序嵌套的结构的程序模块，分别从键盘输入姓名以及8个字符的电话号码，并以一定的格式显示出来。</p><ul><li>主程序<code>TELIST</code>:<ul><li>显示提示符<code>INPUT NAME:</code></li><li>调用子程序<code>INPUT_NAME</code>输入姓名</li><li>显示提示符<code>INPUT A TELEPHONE NUMBER:</code></li><li>调用子程序<code>INPHONE</code>输入电话号码</li><li>调用子程序<code>PRINTLINE</code>显示姓名和号码</li></ul></li><li>子程序<code>INPUT_NAME</code><ul><li>调用键盘输入子程序<code>GETNAME</code>把输入的姓名存入<code>INBUF</code>缓冲区</li></ul></li><li>子程序<code>INPHONE</code><ul><li>调用键盘输入子程序<code>GETPHONE</code>把输入的电话号码放入<code>INBUF</code>缓冲区</li></ul></li><li>子程序<code>PRINTLINE</code><ul><li>显示姓名以及电话号码，格式为：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME                    TEL</span><br><span class="line">XXXXXX                  XXXXXXXX</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="流程图分析"><a href="#流程图分析" class="headerlink" title="流程图分析"></a>流程图分析</h3><p>要实现电话本效果，根据题目描述可以将整个程序划分为五块内容，为“START”、“TELIST”、“INPUT_NAME”、“INPHONE”和“PRINTLINE”，分别画其流程图。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p><h4 id="START程序"><a href="#START程序" class="headerlink" title="START程序"></a>START程序</h4><p><img src="/2020/04/07/START.png" alt="START" title="START"></p><h4 id="TELIST程序"><a href="#TELIST程序" class="headerlink" title="TELIST程序"></a>TELIST程序</h4><p><img src="/2020/04/07/TELIST.png" alt="TELIST" title="TELIST"></p><h4 id="INPUT-NAME子程序"><a href="#INPUT-NAME子程序" class="headerlink" title="INPUT_NAME子程序"></a>INPUT_NAME子程序</h4><p><img src="/2020/04/07/INPUT_NAME.png" alt="INPUT_NAME" title="INPUT_NAME"></p><h4 id="INPHONE子程序"><a href="#INPHONE子程序" class="headerlink" title="INPHONE子程序"></a>INPHONE子程序</h4><p><img src="/2020/04/07/INPHONE.png" alt="INPHONE" title="INPHONE"></p><h4 id="PRINTLINE子程序"><a href="#PRINTLINE子程序" class="headerlink" title="PRINTLINE子程序"></a>PRINTLINE子程序</h4><p><img src="/2020/04/07/PRINTLINE.png" alt="PRINTLINE" title="PRINTLINE"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">; ENVIRONMENT: EMU8086</span><br><span class="line"></span><br><span class="line">DATASEGMENT</span><br><span class="line">NAMEINPUTINFODB&#39;PLEASE INPUT NAME: $&#39;</span><br><span class="line">PHONEINPUTINFODB&#39;INPUT THE TELEPHONE NUMBER: $&#39;</span><br><span class="line">ERRORINFODB0DH,0AH,&#39;THE NUMBER YOU INPUT SHOULD BETWEEN 0-9 OR * OR # !$&#39;</span><br><span class="line">NAMEWARNINFODB0DH,0AH,&#39;LENGTH OF NAME CANNOT LONGER THAN 8 CHARACTERS!&#39;,0DH,0AH,&#39;$&#39;</span><br><span class="line">OUTPUTINFODB0DH,0AH,&#39;NAME                    TEL&#39;,0DH,0AH,&#39;$&#39;</span><br><span class="line">INBUFDB32 DUP(0)</span><br><span class="line">TOTALLENDW0</span><br><span class="line">DATAENDS</span><br><span class="line"></span><br><span class="line">STACKSEGMENTPARASTACK&#39;STACK&#39;</span><br><span class="line">DB100HDUP(0)</span><br><span class="line">STACKENDS</span><br><span class="line"></span><br><span class="line">CODESEGMENT</span><br><span class="line">ASSUMEDS:DATA,CS:CODE</span><br><span class="line">START:MOV AX,DATA</span><br><span class="line">MOV DS,AX</span><br><span class="line">MOV ES,AX</span><br><span class="line">CALL TELIST</span><br><span class="line"></span><br><span class="line">QUIT:MOV AH,4CH</span><br><span class="line">INT 21H</span><br><span class="line"></span><br><span class="line">TELIST PROC NEAR</span><br><span class="line">MOV AH,09H</span><br><span class="line">MOV DX,OFFSET NAMEINPUTINFO</span><br><span class="line">INT 21H</span><br><span class="line">CALL INPUT_NAME</span><br><span class="line"></span><br><span class="line">MOV AH,09H</span><br><span class="line">MOV DX,OFFSET PHONEINPUTINFO</span><br><span class="line">INT 21H</span><br><span class="line">CALL INPHONE</span><br><span class="line"></span><br><span class="line">CALL PRINTLINE</span><br><span class="line">RET</span><br><span class="line">TELISTENDP</span><br><span class="line"></span><br><span class="line">INPUT_NAME PROC NEAR</span><br><span class="line">MOV SI,0</span><br><span class="line">MOV AH,01H</span><br><span class="line">GETNAME: CMP SI,10H</span><br><span class="line">JZNAME_WARNING</span><br><span class="line">INT 21H</span><br><span class="line">CMP AL,0DH</span><br><span class="line">JZQUIT_INPUT</span><br><span class="line">MOV INBUF[SI],AL</span><br><span class="line">INC SI</span><br><span class="line">JMP GETNAME</span><br><span class="line">NAME_WARNING: MOV AH,09H</span><br><span class="line">MOV DX,OFFSET NAMEWARNINFO</span><br><span class="line">INT 21H</span><br><span class="line">QUIT_INPUT: MOV TOTALLEN,SI</span><br><span class="line">RET</span><br><span class="line">INPUT_NAME ENDP</span><br><span class="line"></span><br><span class="line">INPHONE PROC NEAR</span><br><span class="line">MOV SI,TOTALLEN</span><br><span class="line">MOV CX,18H; THERE SHOULD BE 8 UNITS BETWEEN NAME STRING (16 CHARACTERS) AND </span><br><span class="line">SUB CX,SI; PHONE ARRAY (8 NUMBERS), BUT I WANNA FILLING ALL THE UNITS  WHICH </span><br><span class="line">FILLIN:MOV INBUF[SI],&#39; &#39;; START AFTER THE LAST CHARACTER AND END BEFORE THE FIRST NUMBER WITH </span><br><span class="line">INC SI; &#39;SPACE&#39;.</span><br><span class="line">LOOP FILLIN</span><br><span class="line"></span><br><span class="line">MOV CX,08H</span><br><span class="line">MOV AH,01H</span><br><span class="line">GETPHONE: INT 21H</span><br><span class="line">CMP AL,23H</span><br><span class="line">JZSTORE</span><br><span class="line">CMP AL,2AH</span><br><span class="line">JZSTORE</span><br><span class="line">CMP AL,30H</span><br><span class="line">JLERRORINPUT</span><br><span class="line">CMP AL,39H</span><br><span class="line">JG ERRORINPUT</span><br><span class="line">STORE:MOV INBUF[SI],AL</span><br><span class="line">INC SI</span><br><span class="line">LOOP GETPHONE</span><br><span class="line">MOV TOTALLEN,SI</span><br><span class="line">RET</span><br><span class="line">ERRORINPUT: MOV AH,09H</span><br><span class="line">MOV DX,OFFSET ERRORINFO</span><br><span class="line">INT 21H</span><br><span class="line">JMP QUIT_INPUT</span><br><span class="line">INPHONEENDP</span><br><span class="line"></span><br><span class="line">PRINTLINE PROC NEAR</span><br><span class="line">MOV AH,09H</span><br><span class="line">MOV DX,OFFSET OUTPUTINFO</span><br><span class="line">INT 21H</span><br><span class="line">MOV SI,TOTALLEN</span><br><span class="line">MOV INBUF[SI],&#39;$&#39;</span><br><span class="line">MOV AH,09H</span><br><span class="line">MOV DX,OFFSET INBUF</span><br><span class="line">INT 21H</span><br><span class="line">RET</span><br><span class="line">PRINTLINE ENDP</span><br><span class="line"></span><br><span class="line">CODEENDS</span><br><span class="line">ENDSTART</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><h4 id="姓名输入运行效果"><a href="#姓名输入运行效果" class="headerlink" title="姓名输入运行效果"></a>姓名输入运行效果</h4><p><img src="/2020/04/07/name.jpg" alt="name" title="NAME"></p><h4 id="号码输入及显示效果"><a href="#号码输入及显示效果" class="headerlink" title="号码输入及显示效果"></a>号码输入及显示效果</h4><p><img src="/2020/04/07/phone.jpg" alt="phone" title="PHONE"></p><h4 id="异常输入效果"><a href="#异常输入效果" class="headerlink" title="异常输入效果"></a>异常输入效果</h4><p><img src="/2020/04/07/ErrorMessage.jpg" alt="name" title="ErrorMessage"></p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">参考博文：<a href="https://blog.csdn.net/u013007900/article/details/50268467" target="_blank" rel="noopener">汇编 DOS的中断调用 INT 21H</a>.</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">分析思路参考<a href="http://forec.cn" target="_blank" rel="noopener">@Forec</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;http://xxx/aplayer.min.css&quot;&gt;&lt;script src=&quot;http://xxx/aplayer.min.js&quot; clas
      
    
    </summary>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/categories/Blogs/"/>
    
      <category term="汇编" scheme="https://CallMeMengMeng.github.io/categories/Blogs/%E6%B1%87%E7%BC%96/"/>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/tags/Blogs/"/>
    
      <category term="汇编" scheme="https://CallMeMengMeng.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>琐言碎语(1)</title>
    <link href="https://callmemengmeng.github.io/2020/03/14/"/>
    <id>https://callmemengmeng.github.io/2020/03/14/</id>
    <published>2020-03-14T13:18:05.000Z</published>
    <updated>2020-04-07T14:39:27.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="http://xxx/aplayer.min.css"><script src="http://xxx/aplayer.min.js" class="aplayer-secondary-script-marker"></script><script>var meting_api='http://xxx/api.php?server=:server&type=:type&id=:id&r=:r'</script><script class="meting-secondary-script-marker" src="http://xxx/Meing.min.js"></script><blockquote><p>这段时间不在状态，之前天天瞎想，而今干脆不想，流水账生活一天天的小火乱炖。回顾一周既无专业新知之所得，又无哲理心学之所悟，琐言碎语拼凑出“牢骚”二字。</p></blockquote><p>打从正月初一回家至今五十天整，咱Reyes积极响应“宅家”号召，能不出去就不出去，牢牢宅于空中楼阁(<del>字面意思</del>)之中，过着卧室-客厅-厨房三点一线的生活。本小子自诩“宅男”，一不好运动二不热社交(<del>这情况下也无社交可言</del>)，居家每天看看文献、搞搞实验，和家人刷剧唠嗑倒也自在。所以头开始的三十几天热乎劲儿十足，一鼓作气看完了四本专业书和三十多篇中英文论文。此外还拜读了<a href="https://book.douban.com/subject/30446684/" target="_blank" rel="noopener">《六里庄遗事》</a>、<a href="https://book.douban.com/subject/5317075/" target="_blank" rel="noopener">《蔡康永的说话之道》</a>、<a href="http://luxun.zuopinj.com/2231/" target="_blank" rel="noopener">《呐喊》</a>等几本大作，也不务正业翻看了《军鸡》和<a href="https://baike.baidu.com/item/%E7%A5%9E%E5%85%B5%E7%8E%84%E5%A5%87/3896279" target="_blank" rel="noopener">《神兵玄奇》</a>两本漫画书。咱是个俗人，读后写不出豆瓣上大篇幅的阳春白雪，但神兵世界真不应该只是《神兵小将》呈现的样子。</p><p>窗外的世界静谧无声，网上的世界魔幻翻涌，本小子瞪着死鱼眼紧盯巴掌大的屏幕终究难逃瞌睡，不在其位不谋其政，爱咋地咋地自有后人由是家评说。书桌旁窗户临街，卅日来明显察觉到往来的救护车警笛声日渐稀疏，天气回暖，楼角处几株桃树花开花又落。最近企业复工，窗外静寂不再而车辆日渐熙攘，窗内宅而不定更是心向往之。借着帮忙拎菜的由头和父母全副武装动身去超市，才觉双脚踏地和买到“再来一包”干脆面是一样幸福的。</p><p>宅家四十天没剪过头发，大门落锁半步不出丝毫不担心仪容仪表。某天早上耳廓奇痒对镜端详，原来鬓发遮耳矣，拨来弄去只得将之捋于耳后，好嘛，若是再扎一发髻简直和清纯丸子头同款，父母更瞧不上我这<strong>没洗狄拉克，洗后冲天鬏</strong>的揍性，便趁着购物的当儿带我一同去理发。沿途几家理发店，托尼老师比顾客都多，末了探头询问价格——一颗脑袋三十大洋！嚯，长这么些年咱就没剪过超十五元的发，这韭菜也不能这么割哇，合着我这一颗脑袋下去，店内唯二托尼老师中午外卖就有着落了啊。货比三家切走且看，找到一破落小铺子，这才将满头长毛洒落一地。</p><p>宅后生活，从头开始。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;http://xxx/aplayer.min.css&quot;&gt;&lt;script src=&quot;http://xxx/aplayer.min.js&quot; clas
      
    
    </summary>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/categories/Blogs/"/>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/tags/Blogs/"/>
    
  </entry>
  
  <entry>
    <title>还是需要软寿司</title>
    <link href="https://callmemengmeng.github.io/2020/03/06/"/>
    <id>https://callmemengmeng.github.io/2020/03/06/</id>
    <published>2020-03-06T09:58:18.000Z</published>
    <updated>2020-03-08T11:54:23.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="http://xxx/aplayer.min.css"><script src="http://xxx/aplayer.min.js" class="aplayer-secondary-script-marker"></script><script>var meting_api='http://xxx/api.php?server=:server&type=:type&id=:id&r=:r'</script><script class="meting-secondary-script-marker" src="http://xxx/Meing.min.js"></script><p><font face="Times New Roman" size="2" color="gray">“RSS is a web feed that allows users and applications to access updates to websites in a standardized, computer-readable format. These feeds can, for example, allow a user to keep track of many different websites in a single news aggregator.”—— <b>Wikipedia</b></font></p><p>今天没有干货知识，没有烧脑公式，也不贫嘴谈心，这就是篇搬砖水文，聊聊“软寿司”好了。此寿司和紫菜饼卷米饭就芥末的那一款有点相似，代码壳下包裹着真正有趣的信息，不过这玩意儿只能先给计算机吃，人再来吃计算机消化出来的东西获得二次处理后的养分。这也是<a href="https://www.runoob.com/rss/rss-tutorial.html" target="_blank" rel="noopener">RSS</a>在我这儿得名“软寿司”的原因。</p><p>出于工作学习的需要，小子我得经常查阅英文文献以及国外新闻，最近又喜欢去一些技术博客串门瞻仰，长此以往移动设备里满是<em>The Guardian</em>，<em>The Economist</em>，<em>New York Times</em>等客户端，定时到浏览器书签栏人工遍历博客是否更新…这可就有点麻烦(<del>恶心</del>)了哈。闲逛时发觉一些网站支持订阅功能，打开后是<code>XML</code>格式文档，放狗搜过后发现了盛行一时而今没落的RSS<del>软寿司</del>简易信息聚合技术。这玩意儿可以同步网站内容，同时能在RSS阅读器上获取更新信息，这种所见即所愿完美契合我的需求。挑选好钟意的软寿司后，本小子自己也得整一个。编程的奇技淫巧我并不擅长，但查资料搬轮子我熟啊，放狗遛一圈儿，果然大能们早把轮子安排妥当了。</p><p>为HEXO部署RSS功能只需要三步：</p><ul><li><p>在博客根目录用Git下载<code>hexo-generator-feed</code>包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hexo)$ npm install hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>仍在根目录下打开<code>_config.yml</code>文件并添加订阅配置(详细请参阅该<a href="https://github.com/hexojs/hexo-generator-feed#hexo-generator-feed" target="_blank" rel="noopener">项目README.md</a>文档)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">feed:</span><br><span class="line">  type: atom# RSS的类型: atom&#x2F;rss2</span><br><span class="line">  path: atom.xml# 文件路径: atom.xml&#x2F;rss2.xml</span><br><span class="line">  limit: 5# 订阅中展示文章的数量(0&#x2F;false代表全部展示)</span><br><span class="line">  #hub: # PubSubHubbub hubs链接(不填就行)</span><br><span class="line">  #content:# 在RSS文件中包含文章全部内容(默认false不用打开)</span><br><span class="line">  #content_limit:# 摘要中使用文章内容的默认长度(不用理会)</span><br><span class="line">  #order_by:# 订阅中展示文章的顺序(默认-date日期排序)</span><br></pre></td></tr></table></figure></li><li><p>在<code>\themes</code>下找到使用的主题并打开<code>_config.yml</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">links:</span><br><span class="line">  RSS: &#x2F;atom.xml</span><br></pre></td></tr></table></figure></li></ul><p>配置好后重新编译发布即可看到自己的软寿司订阅。一得必有一失，其缺点我还没找到好的解决方案，文章中的LaTeX格式的公式无法被渲染出来，不知道哪款客户端支持LaTeX渲染嘞？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;http://xxx/aplayer.min.css&quot;&gt;&lt;script src=&quot;http://xxx/aplayer.min.js&quot; clas
      
    
    </summary>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/categories/Blogs/"/>
    
    
      <category term="Blogs" scheme="https://CallMeMengMeng.github.io/tags/Blogs/"/>
    
  </entry>
  
</feed>
